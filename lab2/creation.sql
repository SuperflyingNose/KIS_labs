-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

CREATE TYPE public.friend_tag AS ENUM
    ('best_friend', 'relative', 'colleague', 'university_friend', 'school_friend');

ALTER TYPE public.friend_tag
    OWNER TO postgres;

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigint NOT NULL,
    name text NOT NULL,
    email text NOT NULL,
    password text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.channel
(
    id bigint NOT NULL,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.message
(
    id bigint NOT NULL,
    text text,
    file bytea,
    chat_id bigint NOT NULL,
    author bigint NOT NULL,
    date timestamp with time zone NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.chat
(
    id bigint NOT NULL,
    name text NOT NULL,
    channel_id bigint,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.role
(
    id bigint NOT NULL,
    name text NOT NULL,
    channel_id bigint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.permission
(
    id bigint NOT NULL,
    name text NOT NULL,
    description text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.channel_member
(
    channel_id bigint NOT NULL,
    user_id bigint NOT NULL,
    nickname text,
    banned boolean NOT NULL DEFAULT false,
    member_id bigserial NOT NULL,
    PRIMARY KEY (member_id)
);

CREATE TABLE IF NOT EXISTS public.channel_member_role
(
    channel_member_user_id bigint NOT NULL,
    role_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.role_permission
(
    role_id bigint NOT NULL,
    permission_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.friends
(
    user_id bigint NOT NULL,
    friend_id bigint NOT NULL,
    tag friend_tag
);

CREATE TABLE IF NOT EXISTS public.chat_user
(
    chat_id bigint NOT NULL,
    user_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.call
(
    id bigint NOT NULL,
    chat_id bigint NOT NULL,
    duration time without time zone NOT NULL,
    date timestamp without time zone NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (chat_id)
    REFERENCES public.chat (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.message
    ADD FOREIGN KEY (author)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.chat
    ADD FOREIGN KEY (channel_id)
    REFERENCES public.channel (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.role
    ADD FOREIGN KEY (channel_id)
    REFERENCES public.channel (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.channel_member
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.channel_member
    ADD FOREIGN KEY (channel_id)
    REFERENCES public.channel (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.channel_member_role
    ADD FOREIGN KEY (role_id)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.channel_member_role
    ADD FOREIGN KEY (channel_member_user_id)
    REFERENCES public.channel_member (member_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.role_permission
    ADD FOREIGN KEY (role_id)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.role_permission
    ADD FOREIGN KEY (permission_id)
    REFERENCES public.permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.friends
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.friends
    ADD FOREIGN KEY (friend_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.chat_user
    ADD FOREIGN KEY (chat_id)
    REFERENCES public.chat (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.chat_user
    ADD FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.call
    ADD FOREIGN KEY (chat_id)
    REFERENCES public.chat (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;